resources:
  limits:
    cpu: 100m
    memory: 50Mi
  requests:
    cpu: 100m
    memory: 50Mi

ingress:
  enabled: true
  annotations:
    "certmanager.k8s.io/cluster-issuer": "letsencrypt-prod"
    "kubernetes.io/ingress.class": "nginx"
    "nginx.ingress.kubernetes.io/proxy-body-size": "500m"
  path: /
  hosts:
    - private.dex.jenkins.io
  tls:
    - secretName: private-dex-tls
      hosts:
        - private.dex.jenkins.io

certs:
  image: gcr.io/google_containers/kubernetes-dashboard-init-amd64
  imageTag: "v1.0.0"
  imagePullPolicy: "IfNotPresent"
  web:
    create: true
    activeDeadlineSeconds: 300
    caDays: 10000
    certDays: 10000
    altNames:
      - private-dex
      - private-dex.dex
      - private.dex.jenkins.io
    altIPs: {}
    secret:
      tlsName: dex-web-server-tls
      caName: dex-web-server-ca
  grpc:
    create: true
    activeDeadlineSeconds: 300
    altNames:
      - private-dex
      - private-dex.dex
      - private.dex.jenkins.io
    altIPs: {}
    secret:
      serverTlsName: dex-grpc-server-tls
      clientTlsName: dex-grpc-client-tls
      caName: dex-grpc-ca

rbac:
  # Specifies whether RBAC resources should be created
  create: true

config:
  issuer: https://private.dex.jenkins.io
  frontend:
    logoURL: https://jenkins.io/images/logos/sherlock/sherlock.png
  oauth2:
    skipApprovalScreen: true
  connectors:
    - type: github
      # Required field for connector id.
      id: github
      # Required field for connector name.
      name: GitHub
      config:
        # Credentials can be string literals or pulled from the environment.
        clientID: bbe2a968494fa5e5ae80
        clientSecret: 8b896613a4899d0e3fc3df16d40b74919226f331
        redirectURI: "https://private.dex.jenkins.io/callback"
        orgs:
          # Include all teams as claims.
          - name: jenkins-infra
            # A white list of teams. Only include group claims for these teams.
            teams:
              - Core
            # Flag which indicates that all user groups and teams should be loaded.
            # loadAllGroups: false
   # - type: ldap
   #   id: ldap
   #   name: LDAP
   #   config:
   #     host: ldap.jenkins.io:636
   #     # rootCA: /etc/dex/ldap.ca
   #     bindDN: cn=release-admin,dc=jenkins-ci,dc=org
   #     bindPW: 8cGmpm2jNRjDlLvPuiwg7qmB0
   #     usernamePrompt: Jenkins Account
   #     userSearch:
   #       baseDN: ou=people,dc=jenkins-ci,dc=org
   #       username: cn
   #       idAttr: cn
   #       emailAttr: mail
   #       nameAttr: givenName
   #     groupSearch:
   #       baseDN: "ou=groups,dc=jenkins-ci,dc=org"
   #       filter: "(objectClass=groupOfNames)"
   #       userAttr: DN # 
   #       groupAttr: member
   #       nameAttr: cn
  staticClients:
    - id: polls
      redirectURIs:
        - 'https://admin.polls.jenkins.io/oauth2/callback'
      name: 'admin.polls.jenkins.io'
      secret: Q1hMdVdnRmd2cEtSVnFHWlhEU3Jydz09
  enablePasswordDB: false
